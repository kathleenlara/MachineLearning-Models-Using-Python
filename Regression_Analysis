{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "systematic-christianity",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1946, 28)"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# importing libraries\n",
    "import pandas as pd             \n",
    "import matplotlib.pyplot as plt \n",
    "import seaborn as sns          \n",
    "import statsmodels.formula.api as smf # predictive modeling with nice outputs \n",
    "from sklearn.model_selection import train_test_split \n",
    "from sklearn.linear_model import LinearRegression \n",
    "import random as rand \n",
    "import gender_guesser.detector as gender\n",
    "\n",
    "\n",
    "# setting pandas print options\n",
    "pd.set_option('display.max_rows', 500)\n",
    "pd.set_option('display.max_columns', 500)\n",
    "pd.set_option('display.width', 1000)\n",
    "\n",
    "\n",
    "# specifying file name\n",
    "file = './Datasets/Apprentice_Chef_Dataset.xlsx'\n",
    "\n",
    "# reading the file into Python\n",
    "data_df = pd.read_excel(io=file)\n",
    "\n",
    "# Checking the shape\n",
    "data_df.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "corresponding-turtle",
   "metadata": {},
   "source": [
    "# Initial Exploration of the Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "intense-cookie",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>REVENUE</th>\n",
       "      <th>CROSS_SELL_SUCCESS</th>\n",
       "      <th>NAME</th>\n",
       "      <th>EMAIL</th>\n",
       "      <th>FIRST_NAME</th>\n",
       "      <th>FAMILY_NAME</th>\n",
       "      <th>TOTAL_MEALS_ORDERED</th>\n",
       "      <th>UNIQUE_MEALS_PURCH</th>\n",
       "      <th>CONTACTS_W_CUSTOMER_SERVICE</th>\n",
       "      <th>PRODUCT_CATEGORIES_VIEWED</th>\n",
       "      <th>AVG_TIME_PER_SITE_VISIT</th>\n",
       "      <th>MOBILE_NUMBER</th>\n",
       "      <th>CANCELLATIONS_BEFORE_NOON</th>\n",
       "      <th>CANCELLATIONS_AFTER_NOON</th>\n",
       "      <th>TASTES_AND_PREFERENCES</th>\n",
       "      <th>PC_LOGINS</th>\n",
       "      <th>MOBILE_LOGINS</th>\n",
       "      <th>WEEKLY_PLAN</th>\n",
       "      <th>EARLY_DELIVERIES</th>\n",
       "      <th>LATE_DELIVERIES</th>\n",
       "      <th>PACKAGE_LOCKER</th>\n",
       "      <th>REFRIGERATED_LOCKER</th>\n",
       "      <th>AVG_PREP_VID_TIME</th>\n",
       "      <th>LARGEST_ORDER_SIZE</th>\n",
       "      <th>MASTER_CLASSES_ATTENDED</th>\n",
       "      <th>MEDIAN_MEAL_RATING</th>\n",
       "      <th>AVG_CLICKS_PER_VISIT</th>\n",
       "      <th>TOTAL_PHOTOS_VIEWED</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>393.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Saathos</td>\n",
       "      <td>saathos@unitedhealth.com</td>\n",
       "      <td>Saathos</td>\n",
       "      <td>Saathos</td>\n",
       "      <td>14</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "      <td>10</td>\n",
       "      <td>48.00</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>33.4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1365.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Alysanne Osgrey</td>\n",
       "      <td>alysanne.osgrey@ge.org</td>\n",
       "      <td>Alysanne</td>\n",
       "      <td>Osgrey</td>\n",
       "      <td>87</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>40.35</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>84.8</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>800.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Edwyd Fossoway</td>\n",
       "      <td>edwyd.fossoway@jnj.com</td>\n",
       "      <td>Edwyd</td>\n",
       "      <td>Fossoway</td>\n",
       "      <td>15</td>\n",
       "      <td>7</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "      <td>19.77</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>63.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>600.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Eleyna Westerling</td>\n",
       "      <td>eleyna.westerling@ge.org</td>\n",
       "      <td>Eleyna</td>\n",
       "      <td>Westerling</td>\n",
       "      <td>13</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "      <td>90.00</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>43.8</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1490.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Elyn Norridge</td>\n",
       "      <td>elyn.norridge@jnj.com</td>\n",
       "      <td>Elyn</td>\n",
       "      <td>Norridge</td>\n",
       "      <td>47</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "      <td>40.38</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>84.8</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>205</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   REVENUE  CROSS_SELL_SUCCESS               NAME                     EMAIL FIRST_NAME FAMILY_NAME  TOTAL_MEALS_ORDERED  UNIQUE_MEALS_PURCH  CONTACTS_W_CUSTOMER_SERVICE  PRODUCT_CATEGORIES_VIEWED  AVG_TIME_PER_SITE_VISIT  MOBILE_NUMBER  CANCELLATIONS_BEFORE_NOON  CANCELLATIONS_AFTER_NOON  TASTES_AND_PREFERENCES  PC_LOGINS  MOBILE_LOGINS  WEEKLY_PLAN  EARLY_DELIVERIES  LATE_DELIVERIES  PACKAGE_LOCKER  REFRIGERATED_LOCKER  AVG_PREP_VID_TIME  LARGEST_ORDER_SIZE  MASTER_CLASSES_ATTENDED  MEDIAN_MEAL_RATING  AVG_CLICKS_PER_VISIT  TOTAL_PHOTOS_VIEWED\n",
       "0    393.0                   1            Saathos  saathos@unitedhealth.com    Saathos     Saathos                   14                   6                           12                         10                    48.00              1                          3                         1                       1          5              2            0                 0                2               0                    0               33.4                   1                        0                   1                    17                    0\n",
       "1   1365.0                   1    Alysanne Osgrey    alysanne.osgrey@ge.org   Alysanne      Osgrey                   87                   3                            8                          8                    40.35              1                          0                         0                       1          5              1           12                 0                2               0                    0               84.8                   1                        0                   3                    13                  170\n",
       "2    800.0                   1     Edwyd Fossoway    edwyd.fossoway@jnj.com      Edwyd    Fossoway                   15                   7                           11                          5                    19.77              1                          3                         0                       1          6              1            1                 0                1               0                    0               63.0                   1                        0                   2                    16                    0\n",
       "3    600.0                   1  Eleyna Westerling  eleyna.westerling@ge.org     Eleyna  Westerling                   13                   6                           11                          5                    90.00              1                          2                         0                       1          6              1           14                 0                3               0                    0               43.8                   1                        0                   2                    14                    0\n",
       "4   1490.0                   1      Elyn Norridge     elyn.norridge@jnj.com       Elyn    Norridge                   47                   8                            6                         10                    40.38              1                          0                         0                       0          5              1            5                 0                8               0                    0               84.8                   1                        1                   3                    12                  205"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Look at the sample values of the first few rows\n",
    "data_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "voluntary-quarterly",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "source": [
    "## Variable Types\n",
    "\n",
    "**Continuous**<br>\n",
    "REVENUE <br>\n",
    "AVG_TIME_PER_SITE_VISIT<br>\n",
    "AVG_PREP_VID_TIME<br>\n",
    "TOTAL_MEALS_ORDERED<br>\n",
    "TOTAL_PHOTOS_VIEWED<br>\n",
    "WEEKLY_PLAN<br>\n",
    "\n",
    "**Interval / Count**<br>\n",
    "UNIQUE_MEALS_PURCH<br>\n",
    "CONTACTS_W_CUSTOMER_SERVICE<br>\n",
    "PRODUCT_CATEGORIES_VIEWED<br>\n",
    "CANCELLATIONS_BEFORE_NOON<br>\n",
    "CANCELLATIONS_AFTER_NOON<br>\n",
    "MOBILE_LOGINS<br>\n",
    "PC_LOGINS<br>\n",
    "LARGE_ORDER_SIZE<br>\n",
    "EARLY_DELIVERIES<br>\n",
    "LATE_DELIVERIES<br>\n",
    "MASTER_CLASSES_ATTENDED<br>\n",
    "AVG_CLICKS_PER_VISIT<br>\n",
    "MEDIAN_MEAL_RATING\n",
    "\n",
    "**CATEGORICAL**<br>\n",
    "CROSS_SELL_SUCCESS<br>\n",
    "NAME<br>\n",
    "EMAIL<br>\n",
    "FIRST_NAME<br>\n",
    "FAMILY_NAME<br>\n",
    "MOBILE_NUMBER<br>\n",
    "TASTES_AND_PREFERENCES<br>\n",
    "PACKAGE_LOCKER<br>\n",
    "REFRIGERATED_LOCKER"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "exclusive-carnival",
   "metadata": {},
   "source": [
    "## REVENUE (Y-PRED) Distribution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "limited-period",
   "metadata": {
    "deletable": false,
    "editable": false,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# developing a histogram using DISPLOT\n",
    "sns.displot(data   = data_df,\n",
    "            x      = 'REVENUE',\n",
    "            height = 5,\n",
    "            aspect = 2)\n",
    "\n",
    "\n",
    "# displaying the histogram\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "northern-morrison",
   "metadata": {},
   "source": [
    "# Feature Engineering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "metropolitan-system",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "data_df['log_REVENUE'] = np.log10(data_df['REVENUE'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "relative-twist",
   "metadata": {},
   "source": [
    "## Missing Value Analysis and Imputation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "italian-pointer",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "REVENUE                         0\n",
       "CROSS_SELL_SUCCESS              0\n",
       "NAME                            0\n",
       "EMAIL                           0\n",
       "FIRST_NAME                      0\n",
       "FAMILY_NAME                    47\n",
       "TOTAL_MEALS_ORDERED             0\n",
       "UNIQUE_MEALS_PURCH              0\n",
       "CONTACTS_W_CUSTOMER_SERVICE     0\n",
       "PRODUCT_CATEGORIES_VIEWED       0\n",
       "AVG_TIME_PER_SITE_VISIT         0\n",
       "MOBILE_NUMBER                   0\n",
       "CANCELLATIONS_BEFORE_NOON       0\n",
       "CANCELLATIONS_AFTER_NOON        0\n",
       "TASTES_AND_PREFERENCES          0\n",
       "PC_LOGINS                       0\n",
       "MOBILE_LOGINS                   0\n",
       "WEEKLY_PLAN                     0\n",
       "EARLY_DELIVERIES                0\n",
       "LATE_DELIVERIES                 0\n",
       "PACKAGE_LOCKER                  0\n",
       "REFRIGERATED_LOCKER             0\n",
       "AVG_PREP_VID_TIME               0\n",
       "LARGEST_ORDER_SIZE              0\n",
       "MASTER_CLASSES_ATTENDED         0\n",
       "MEDIAN_MEAL_RATING              0\n",
       "AVG_CLICKS_PER_VISIT            0\n",
       "TOTAL_PHOTOS_VIEWED             0\n",
       "log_REVENUE                     0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_df.isnull().sum(axis = 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "protecting-classics",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "REVENUE                        0\n",
       "CROSS_SELL_SUCCESS             0\n",
       "NAME                           0\n",
       "EMAIL                          0\n",
       "FIRST_NAME                     0\n",
       "FAMILY_NAME                    0\n",
       "TOTAL_MEALS_ORDERED            0\n",
       "UNIQUE_MEALS_PURCH             0\n",
       "CONTACTS_W_CUSTOMER_SERVICE    0\n",
       "PRODUCT_CATEGORIES_VIEWED      0\n",
       "AVG_TIME_PER_SITE_VISIT        0\n",
       "MOBILE_NUMBER                  0\n",
       "CANCELLATIONS_BEFORE_NOON      0\n",
       "CANCELLATIONS_AFTER_NOON       0\n",
       "TASTES_AND_PREFERENCES         0\n",
       "PC_LOGINS                      0\n",
       "MOBILE_LOGINS                  0\n",
       "WEEKLY_PLAN                    0\n",
       "EARLY_DELIVERIES               0\n",
       "LATE_DELIVERIES                0\n",
       "PACKAGE_LOCKER                 0\n",
       "REFRIGERATED_LOCKER            0\n",
       "AVG_PREP_VID_TIME              0\n",
       "LARGEST_ORDER_SIZE             0\n",
       "MASTER_CLASSES_ATTENDED        0\n",
       "MEDIAN_MEAL_RATING             0\n",
       "AVG_CLICKS_PER_VISIT           0\n",
       "TOTAL_PHOTOS_VIEWED            0\n",
       "log_REVENUE                    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# creating a dropped dataset to visualize 'FAMILY_NAME'\n",
    "df_dropped = data_df.dropna()\n",
    "\n",
    "#check if there is any missing values in the dropped dataset\n",
    "df_dropped.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "recovered-kitty",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# creating an imputation value\n",
    "fill = 'Unknown'\n",
    "\n",
    "# imputing 'FAMILY_NAME'\n",
    "data_df['FAMILY_NAME'] = data_df['FAMILY_NAME'].fillna(fill)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fatty-operation",
   "metadata": {},
   "source": [
    "## Continuous Variables: Trend Based Features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "lesser-gregory",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'REVENUE')"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Continuous Variables Visual EDA (Scatterplots)\n",
    "\n",
    "# setting figure size\n",
    "fig, ax = plt.subplots(figsize = (10, 8))\n",
    "\n",
    "\n",
    "# AVG_TIME_PER_SITE_VISIT\n",
    "plt.subplot(2, 2, 1)\n",
    "sns.scatterplot(x = data_df['AVG_TIME_PER_SITE_VISIT'],\n",
    "                y = data_df['REVENUE'],\n",
    "                color = 'g')\n",
    "plt.xlabel(xlabel = 'AVG_TIME_PER_SITE_VISIT')\n",
    "plt.ylabel(ylabel = 'REVENUE')\n",
    "\n",
    "\n",
    "\n",
    "# AVG_PREP_VID_TIME\n",
    "plt.subplot(2, 2, 2)\n",
    "sns.scatterplot(x = data_df['AVG_PREP_VID_TIME'],\n",
    "                y = data_df['REVENUE'],\n",
    "                color = 'g')\n",
    "plt.xlabel(xlabel = 'AVG_PREP_VID_TIME')\n",
    "plt.ylabel(ylabel = 'REVENUE')\n",
    "\n",
    "\n",
    "# TOTAL_MEALS_ORDERED\n",
    "plt.subplot(2, 2, 3)\n",
    "sns.scatterplot(x = data_df['TOTAL_MEALS_ORDERED'],\n",
    "                y = data_df['REVENUE'],\n",
    "                color = 'g')\n",
    "plt.xlabel(xlabel = 'TOTAL_MEALS_ORDERED')\n",
    "plt.ylabel(ylabel = 'REVENUE')\n",
    "\n",
    "\n",
    "# TOTAL_PHOTOS_VIEWED\n",
    "plt.subplot(2, 2, 4)\n",
    "sns.scatterplot(x = data_df['TOTAL_PHOTOS_VIEWED'],\n",
    "                y = data_df['REVENUE'],\n",
    "                color = 'g')\n",
    "plt.xlabel(xlabel = 'TOTAL_PHOTOS_VIEWED')\n",
    "plt.ylabel(ylabel = 'REVENUE')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "knowing-roommate",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "                             No\t\tYes\n",
      "                           ---------------------\n",
      "AVG_TIME_PER_SITE_VISIT   | 0\t\t1946\n",
      "AVG_PREP_VID_TIME         | 0\t\t1946\n",
      "TOTAL_MEALS_ORDERED       | 0\t\t1946\n",
      "TOTAL_PHOTOS_VIEWED       | 1140\t806\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# counting the number of zeroes\n",
    "AVG_TIME_PER_SITE_VISIT_zeroes   = len(data_df['AVG_TIME_PER_SITE_VISIT'][data_df['AVG_TIME_PER_SITE_VISIT'] == 0])\n",
    "AVG_PREP_VID_TIME_zeroes     = len(data_df['AVG_PREP_VID_TIME'][data_df['AVG_PREP_VID_TIME'] == 0])\n",
    "TOTAL_MEALS_ORDERED_zeroes = len(data_df['TOTAL_MEALS_ORDERED'][data_df['TOTAL_MEALS_ORDERED'] == 0])\n",
    "TOTAL_PHOTOS_VIEWED_zeroes   = len(data_df['TOTAL_PHOTOS_VIEWED'][data_df['TOTAL_PHOTOS_VIEWED'] == 0])\n",
    "\n",
    "# printing a table of the results\n",
    "print(f\"\"\"\n",
    "                             No\\t\\tYes\n",
    "                           ---------------------\n",
    "AVG_TIME_PER_SITE_VISIT   | {AVG_TIME_PER_SITE_VISIT_zeroes}\\t\\t{len(data_df) - AVG_TIME_PER_SITE_VISIT_zeroes}\n",
    "AVG_PREP_VID_TIME         | {AVG_PREP_VID_TIME_zeroes}\\t\\t{len(data_df) - AVG_PREP_VID_TIME_zeroes}\n",
    "TOTAL_MEALS_ORDERED       | {TOTAL_MEALS_ORDERED_zeroes}\\t\\t{len(data_df) - TOTAL_MEALS_ORDERED_zeroes}\n",
    "TOTAL_PHOTOS_VIEWED       | {TOTAL_PHOTOS_VIEWED_zeroes}\\t{len(data_df) - TOTAL_PHOTOS_VIEWED_zeroes}\n",
    "\"\"\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "italic-portal",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Log transformation on the continuos variables\n",
    "data_df['log_AVG_TIME_PER_SITE_VISIT'] = np.log10(data_df['AVG_TIME_PER_SITE_VISIT'])\n",
    "data_df['log_AVG_PREP_VID_TIME'] = np.log10(data_df['AVG_PREP_VID_TIME'])\n",
    "data_df['log_TOTAL_MEALS_ORDERED'] = np.log10(data_df['TOTAL_MEALS_ORDERED'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "fifteen-state",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>has_TOTAL_PHOTOS_VIEWED</th>\n",
       "      <th>has_WEEKLY_PLAN</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   has_TOTAL_PHOTOS_VIEWED  has_WEEKLY_PLAN\n",
       "0                        0                0\n",
       "1                        1                1\n",
       "2                        0                1\n",
       "3                        0                1\n",
       "4                        1                1\n",
       "5                        0                0\n",
       "6                        1                1\n",
       "7                        0                1\n",
       "8                        0                1\n",
       "9                        1                1"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# dummy variable for the 2 features\n",
    "data_df['has_TOTAL_PHOTOS_VIEWED'] = 0\n",
    "data_df['has_WEEKLY_PLAN'] = 0\n",
    "\n",
    "\n",
    "for index, value in data_df.iterrows():\n",
    "    \n",
    "    # TOTAL_PHOTOS_VIEWED\n",
    "    if data_df.loc[index, 'TOTAL_PHOTOS_VIEWED'] > 0:\n",
    "        data_df.loc[index, 'has_TOTAL_PHOTOS_VIEWED'] = 1\n",
    "\n",
    "\n",
    "    # Second_Flr_SF\n",
    "    if data_df.loc[index, 'WEEKLY_PLAN'] > 0:\n",
    "        data_df.loc[index, 'has_WEEKLY_PLAN'] = 1\n",
    "        \n",
    "        \n",
    "# checking results\n",
    "data_df['has_TOTAL_PHOTOS_VIEWED'].value_counts(normalize = False).sort_index()\n",
    "data_df['has_WEEKLY_PLAN'].value_counts(normalize = False).sort_index()\n",
    "\n",
    "data_df[['has_TOTAL_PHOTOS_VIEWED', 'has_WEEKLY_PLAN']].head(10)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "initial-speaking",
   "metadata": {},
   "source": [
    "## Interval / Count Variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "basic-instruction",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# UNIQUE_MEALS_PURCH\n",
    "sns.boxplot(x    = 'UNIQUE_MEALS_PURCH',\n",
    "            y    = 'REVENUE',\n",
    "            data = data_df)\n",
    "plt.title(label   = 'Boxplot with UNIQUE_MEALS_PURCH')\n",
    "plt.xlabel(xlabel = 'UNIQUE_MEALS_PURCH')\n",
    "plt.ylabel(ylabel = 'data_df')\n",
    "plt.show()\n",
    "\n",
    "\n",
    "\n",
    "# UNIQUE_MEALS_PURCH\n",
    "sns.boxplot(x    = 'UNIQUE_MEALS_PURCH',\n",
    "            y    = 'REVENUE',\n",
    "            data = data_df)\n",
    "plt.title(label   = 'Boxplot with UNIQUE_MEALS_PURCH')\n",
    "plt.xlabel(xlabel = 'UNIQUE_MEALS_PURCH')\n",
    "plt.ylabel(ylabel = 'data_df')\n",
    "plt.show()\n",
    "\n",
    "\n",
    "# CONTACTS_W_CUSTOMER_SERVICE\n",
    "sns.boxplot(x    = 'CONTACTS_W_CUSTOMER_SERVICE',\n",
    "            y    = 'REVENUE',\n",
    "            data = data_df)\n",
    "plt.title(label   = 'Boxplot with CONTACTS_W_CUSTOMER_SERVICE')\n",
    "plt.xlabel(xlabel = 'CONTACTS_W_CUSTOMER_SERVICE')\n",
    "plt.ylabel(ylabel = 'data_df')\n",
    "plt.show()\n",
    "\n",
    "\n",
    "# PRODUCT_CATEGORIES_VIEWED\n",
    "sns.boxplot(x    = 'PRODUCT_CATEGORIES_VIEWED',\n",
    "            y    = 'REVENUE',\n",
    "            data = data_df)\n",
    "plt.title(label   = 'Boxplot with PRODUCT_CATEGORIES_VIEWED')\n",
    "plt.xlabel(xlabel = 'PRODUCT_CATEGORIES_VIEWED')\n",
    "plt.ylabel(ylabel = 'data_df')\n",
    "plt.show()\n",
    "\n",
    "\n",
    "\n",
    "# CANCELLATIONS_BEFORE_NOON\n",
    "sns.boxplot(x    = 'CANCELLATIONS_BEFORE_NOON',\n",
    "            y    = 'REVENUE',\n",
    "            data = data_df)\n",
    "plt.title(label   = 'Boxplot with CANCELLATIONS_BEFORE_NOON')\n",
    "plt.xlabel(xlabel = 'CANCELLATIONS_BEFORE_NOON')\n",
    "plt.ylabel(ylabel = 'data_df')\n",
    "plt.show()\n",
    "\n",
    "\n",
    "\n",
    "# CANCELLATIONS_AFTER_NOON\n",
    "sns.boxplot(x    = 'CANCELLATIONS_AFTER_NOON',\n",
    "            y    = 'REVENUE',\n",
    "            data = data_df)\n",
    "plt.title(label   = 'Boxplot with CANCELLATIONS_AFTER_NOON')\n",
    "plt.xlabel(xlabel = 'CANCELLATIONS_AFTER_NOON')\n",
    "plt.ylabel(ylabel = 'data_df')\n",
    "plt.show()\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# MOBILE_LOGINS\n",
    "sns.boxplot(x    = 'MOBILE_LOGINS',\n",
    "            y    = 'REVENUE',\n",
    "            data = data_df)\n",
    "plt.title(label   = 'Boxplot with MOBILE_LOGINS')\n",
    "plt.xlabel(xlabel = 'MOBILE_LOGINS')\n",
    "plt.ylabel(ylabel = 'data_df')\n",
    "plt.show()\n",
    "\n",
    "\n",
    "# PC_LOGINS\n",
    "sns.boxplot(x    = 'PC_LOGINS',\n",
    "            y    = 'REVENUE',\n",
    "            data = data_df)\n",
    "plt.title(label   = 'Boxplot with PC_LOGINS')\n",
    "plt.xlabel(xlabel = 'PC_LOGINS')\n",
    "plt.ylabel(ylabel = 'data_df')\n",
    "plt.show()\n",
    "\n",
    "\n",
    "# LARGEST_ORDER_SIZE\n",
    "sns.boxplot(x    = 'LARGEST_ORDER_SIZE',\n",
    "            y    = 'REVENUE',\n",
    "            data = data_df)\n",
    "plt.title(label   = 'Boxplot with LARGEST_ORDER_SIZE')\n",
    "plt.xlabel(xlabel = 'LARGEST_ORDER_SIZE')\n",
    "plt.ylabel(ylabel = 'data_df')\n",
    "plt.show()\n",
    "\n",
    "\n",
    "# EARLY_DELIVERIES\n",
    "sns.boxplot(x    = 'EARLY_DELIVERIES',\n",
    "            y    = 'REVENUE',\n",
    "            data = data_df)\n",
    "plt.title(label   = 'Boxplot with EARLY_DELIVERIES')\n",
    "plt.xlabel(xlabel = 'EARLY_DELIVERIES')\n",
    "plt.ylabel(ylabel = 'data_df')\n",
    "plt.show()\n",
    "\n",
    "\n",
    "# LATE_DELIVERIES\n",
    "sns.boxplot(x    = 'LATE_DELIVERIES',\n",
    "            y    = 'REVENUE',\n",
    "            data = data_df)\n",
    "plt.title(label   = 'Boxplot with LATE_DELIVERIES')\n",
    "plt.xlabel(xlabel = 'LATE_DELIVERIES')\n",
    "plt.ylabel(ylabel = 'data_df')\n",
    "plt.show()\n",
    "\n",
    "\n",
    "\n",
    "# MASTER_CLASSES_ATTENDED\n",
    "sns.boxplot(x    = 'MASTER_CLASSES_ATTENDED',\n",
    "            y    = 'REVENUE',\n",
    "            data = data_df)\n",
    "plt.title(label   = 'Boxplot with MASTER_CLASSES_ATTENDED')\n",
    "plt.xlabel(xlabel = 'MASTER_CLASSES_ATTENDED')\n",
    "plt.ylabel(ylabel = 'data_df')\n",
    "plt.show()\n",
    "\n",
    "\n",
    "\n",
    "# AVG_CLICKS_PER_VISIT\n",
    "sns.boxplot(x    = 'AVG_CLICKS_PER_VISIT',\n",
    "            y    = 'REVENUE',\n",
    "            data = data_df)\n",
    "plt.title(label   = 'Boxplot with AVG_CLICKS_PER_VISIT')\n",
    "plt.xlabel(xlabel = 'AVG_CLICKS_PER_VISIT')\n",
    "plt.ylabel(ylabel = 'data_df')\n",
    "plt.show()\n",
    "\n",
    "\n",
    "# MEDIAN_MEAL_RATING\n",
    "sns.boxplot(x    = 'MEDIAN_MEAL_RATING',\n",
    "            y    = 'REVENUE',\n",
    "            data = data_df)\n",
    "plt.title(label   = 'Boxplot with MEDIAN_MEAL_RATING')\n",
    "plt.xlabel(xlabel = 'MEDIAN_MEAL_RATING')\n",
    "plt.ylabel(ylabel = 'data_df')\n",
    "plt.show()\n",
    "\n",
    "\n",
    "\n",
    "# WEEKLY PLAN\n",
    "sns.boxplot(x    = 'WEEKLY_PLAN',\n",
    "            y    = 'REVENUE',\n",
    "            data = data_df)\n",
    "plt.title(label   = 'Boxplot with WEEKLY_PLAN')\n",
    "plt.xlabel(xlabel = 'WEEKLY_PLAN')\n",
    "plt.ylabel(ylabel = 'data_df')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "standing-camcorder",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "data_df['log_UNIQUE_MEALS_PURCH'] = np.log10(data_df['UNIQUE_MEALS_PURCH'])+ 0.01\n",
    "data_df['log_CONTACTS_W_CUSTOMER_SERVICE'] = np.log10(data_df['CONTACTS_W_CUSTOMER_SERVICE']) + 0.01\n",
    "data_df['log_PRODUCT_CATEGORIES_VIEWED'] = np.log10(data_df['PRODUCT_CATEGORIES_VIEWED'])+ 0.01\n",
    "data_df['log_LARGEST_ORDER_SIZE'] = np.log10(data_df['LARGEST_ORDER_SIZE']) + 0.01\n",
    "data_df['log_AVG_CLICKS_PER_VISIT'] = np.log10(data_df['AVG_CLICKS_PER_VISIT']) + 0.01\n",
    "data_df['log_MEDIAN_MEAL_RATING'] = np.log10(data_df['MEDIAN_MEAL_RATING'])+ 0.01"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "brief-breathing",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "                                No\t\tYes\n",
      "                             -----------------------\n",
      "CANCELLATIONS_BEFORE_NOON  | 667\t\t1279\n",
      "CANCELLATIONS_AFTER_NOON   | 1667\t\t279\n",
      "WEEKLY_PLAN                | 468\t\t1478\n",
      "MASTER_CLASSES_ATTENDED    | 932\t\t1014\n",
      "EARLY_DELIVERIES           | 1167\t\t779\n",
      "LATE_DELIVERIES            | 319\t\t1627\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Counting the number of zeroes for specific variables\n",
    "CANCELLATIONS_BEFORE_NOON_zeroes = len(data_df['CANCELLATIONS_BEFORE_NOON'][data_df['CANCELLATIONS_BEFORE_NOON'] == 0])\n",
    "CANCELLATIONS_AFTER_NOON_zeroes  = len(data_df['CANCELLATIONS_AFTER_NOON'][data_df['CANCELLATIONS_AFTER_NOON'] == 0])\n",
    "WEEKLY_PLAN_zeroes               = len(data_df['WEEKLY_PLAN'][data_df['WEEKLY_PLAN'] == 0])\n",
    "MASTER_CLASSES_ATTENDED_zeroes     = len(data_df['MASTER_CLASSES_ATTENDED'][data_df['MASTER_CLASSES_ATTENDED'] == 0])\n",
    "EARLY_DELIVERIES_zeroes           = len(data_df['EARLY_DELIVERIES'][data_df['EARLY_DELIVERIES'] == 0])\n",
    "LATE_DELIVERIES_zeroes           = len(data_df['LATE_DELIVERIES'][data_df['LATE_DELIVERIES'] == 0])\n",
    "\n",
    "# Printing a table of the results\n",
    "print(f\"\"\"\n",
    "                                No\\t\\tYes\n",
    "                             -----------------------\n",
    "CANCELLATIONS_BEFORE_NOON  | {CANCELLATIONS_BEFORE_NOON_zeroes}\\t\\t{len(data_df) - CANCELLATIONS_BEFORE_NOON_zeroes }\n",
    "CANCELLATIONS_AFTER_NOON   | {CANCELLATIONS_AFTER_NOON_zeroes}\\t\\t{len(data_df) - CANCELLATIONS_AFTER_NOON_zeroes}\n",
    "WEEKLY_PLAN                | {WEEKLY_PLAN_zeroes}\\t\\t{len(data_df) - WEEKLY_PLAN_zeroes }\n",
    "MASTER_CLASSES_ATTENDED    | {MASTER_CLASSES_ATTENDED_zeroes}\\t\\t{len(data_df) - MASTER_CLASSES_ATTENDED_zeroes }\n",
    "EARLY_DELIVERIES           | {EARLY_DELIVERIES_zeroes}\\t\\t{len(data_df) - EARLY_DELIVERIES_zeroes }\n",
    "LATE_DELIVERIES            | {LATE_DELIVERIES_zeroes}\\t\\t{len(data_df) - LATE_DELIVERIES_zeroes }\n",
    "\"\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "binary-savannah",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Creating new columns for dummy variable\n",
    "data_df['has_CANCELLATIONS_BEFORE_NOON']        = 0\n",
    "data_df['has_CANCELLATIONS_AFTER_NOON']         = 0\n",
    "data_df['has_WEEKLY_PLAN']                      = 0\n",
    "data_df['has_MASTER_CLASSES_ATTENDED']      = 0\n",
    "data_df['has_EARLY_DELIVERIES']            = 0\n",
    "data_df['has_LATE_DELIVERIES']             = 0\n",
    "\n",
    "# for loop to declare 0 and 1 \n",
    "for index, value in data_df.iterrows():\n",
    "    \n",
    "    # cancellations_before_noon\n",
    "    if data_df.loc[index,'CANCELLATIONS_BEFORE_NOON'] > 0:\n",
    "        data_df.loc[index, 'has_CANCELLATIONS_BEFORE_NOON'] = 1\n",
    "\n",
    "    # cancellations_after_noon\n",
    "    if data_df.loc[index, 'CANCELLATIONS_AFTER_NOON'] > 0:\n",
    "        data_df.loc[index, 'has_CANCELLATIONS_AFTER_NOON'] = 1\n",
    "        \n",
    "    # weekly_plan\n",
    "    if data_df.loc[index,'WEEKLY_PLAN'] > 0:\n",
    "        data_df.loc[index, 'has_WEEKLY_PLAN'] = 1\n",
    "\n",
    "    # master_classes_attended\n",
    "    if data_df.loc[index, 'MASTER_CLASSES_ATTENDED'] > 0:\n",
    "        data_df.loc[index, 'has_MASTER_CLASSES_ATTENDED'] = 1\n",
    "        \n",
    "    # early_deliveries\n",
    "    if data_df.loc[index, 'EARLY_DELIVERIES'] > 0:\n",
    "        data_df.loc[index, 'has_EARLY_DELIVERIES'] = 1\n",
    "    \n",
    "    # late_deliveries\n",
    "    if data_df.loc[index, 'LATE_DELIVERIES'] > 0:\n",
    "        data_df.loc[index, 'has_LATE_DELIVERIES'] = 1\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "original-wagon",
   "metadata": {},
   "source": [
    "## Categorial Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "secret-bride",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Splitting emails\n",
    "\n",
    "# placeholder list\n",
    "placeholder_lst = []\n",
    "\n",
    "# looping over each email address\n",
    "for index, col in data_df.iterrows():\n",
    "    \n",
    "    # splitting email domain at '@'\n",
    "    split_email = data_df.loc[index, 'EMAIL'].split(sep = '@')\n",
    "    \n",
    "    # appending placeholder_lst with the results\n",
    "    placeholder_lst.append(split_email)\n",
    "    \n",
    "\n",
    "# converting placeholder_lst into a DataFrame \n",
    "emails = pd.DataFrame(placeholder_lst)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "illegal-genius",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "gmail.com           303\n",
       "protonmail.com      284\n",
       "yahoo.com           274\n",
       "msn.com              72\n",
       "aol.com              69\n",
       "passport.com         64\n",
       "hotmail.com          63\n",
       "live.com             62\n",
       "me.com               59\n",
       "amex.com             30\n",
       "jnj.com              28\n",
       "cocacola.com         28\n",
       "mcdonalds.com        28\n",
       "merck.com            28\n",
       "apple.com            27\n",
       "nike.com             27\n",
       "ibm.com              26\n",
       "dupont.com           26\n",
       "ge.org               26\n",
       "microsoft.com        25\n",
       "chevron.com          25\n",
       "unitedhealth.com     24\n",
       "exxon.com            24\n",
       "travelers.com        24\n",
       "boeing.com           23\n",
       "mmm.com              22\n",
       "pg.com               22\n",
       "verizon.com          22\n",
       "caterpillar.com      22\n",
       "walmart.com          21\n",
       "disney.com           21\n",
       "pfizer.com           20\n",
       "visa.com             20\n",
       "jpmorgan.com         19\n",
       "goldmansacs.com      18\n",
       "unitedtech.com       18\n",
       "cisco.com            18\n",
       "homedepot.com        17\n",
       "intel.com            17\n",
       "Name: EMAIL_domain, dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# renaming column to concatenate\n",
    "emails.columns = ['0' , 'EMAIL_domain']\n",
    "\n",
    "\n",
    "# concatenating personal_email_domain with friends DataFrame\n",
    "data_df = pd.concat([data_df, emails['EMAIL_domain']],\n",
    "                     axis = 1)\n",
    "\n",
    "\n",
    "# printing value counts of personal_email_domain\n",
    "data_df.loc[: ,'EMAIL_domain'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "nuclear-youth",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "professional    1085\n",
       "personal         861\n",
       "Name: domain_group, dtype: int64"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Creating domain types \n",
    "\n",
    "# email domain types\n",
    "professional_emails = ['@amex.com','@jnj.com', '@merck.com', '@cocacola.com','@mcdonalds.com', '@apple.com',\n",
    "                              '@nike.com','@ge.org','@dupont.com','@ibm.com','@chevron.com','@microsoft.com','@exxon.com','@unitedhealth.com',\n",
    "                              '@travelers.com','@boeing.com','@mmm.com','@caterpillar.com','@verizon.com','@pg.com',\n",
    "                              '@walmart.com','@disney.com','@pfizer.com','@visa.com','@jpmorgan.com','@cisco.com',\n",
    "                              '@unitedtech.com','@goldmansacs.com','@homedepot.com','@intel.com', '@me.com', '@aol.com', '@hotmail.com', \n",
    "                       '@live.com', '@msn.com', '@passport.com']\n",
    "\n",
    "personal_emails  = ['@gmail.com', '@yahoo.com', '@protonmail.com']\n",
    "\n",
    "\n",
    "# placeholder list\n",
    "placeholder_lst = []\n",
    "\n",
    "\n",
    "# looping to group observations by domain type\n",
    "for domain in data_df['EMAIL_domain']:\n",
    "    \n",
    "    if '@' + domain in professional_emails:\n",
    "        placeholder_lst.append('professional')\n",
    "        \n",
    "\n",
    "    elif '@' + domain in personal_emails:\n",
    "        placeholder_lst.append('personal')\n",
    "    \n",
    "    else:\n",
    "            print('Unknown')\n",
    "\n",
    "\n",
    "# concatenating with original DataFrame\n",
    "data_df['domain_group'] = pd.Series(placeholder_lst)\n",
    "\n",
    "\n",
    "# checking results\n",
    "data_df['domain_group'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "false-photographer",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# one hot encoding for email domain categorial variable\n",
    "one_hot_domain       = pd.get_dummies(data_df['domain_group'])\n",
    "\n",
    "\n",
    "# dropping categorical variables after they've been encoded\n",
    "data_df = data_df.drop('EMAIL', axis = 1)\n",
    "data_df = data_df.drop('domain_group', axis = 1)\n",
    "data_df = data_df.drop('EMAIL_domain', axis = 1)\n",
    "\n",
    "# joining codings together\n",
    "data_df = data_df.join([one_hot_domain])\n",
    "\n",
    "\n",
    "# saving new columns\n",
    "new_columns = data_df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "popular-motivation",
   "metadata": {},
   "source": [
    "# BASE MODEL: Elimination Process\n",
    "\n",
    "After doing all the transformations, I decided to put everything on my model and do an elimination process. Of course (I will only pick one if I did a Variable X and log_X)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "banner-messenger",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>       <td>log_REVENUE</td>   <th>  R-squared:         </th> <td>   0.778</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.774</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   167.2</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Tue, 09 Feb 2021</td> <th>  Prob (F-statistic):</th>  <td>  0.00</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>23:24:24</td>     <th>  Log-Likelihood:    </th> <td>  1725.4</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>  1946</td>      <th>  AIC:               </th> <td>  -3369.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>  1905</td>      <th>  BIC:               </th> <td>  -3140.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>    40</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "                 <td></td>                    <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>                       <td>    1.2602</td> <td>    0.154</td> <td>    8.175</td> <td> 0.000</td> <td>    0.958</td> <td>    1.563</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AVG_TIME_PER_SITE_VISIT</th>         <td>-1.442e-06</td> <td> 6.29e-05</td> <td>   -0.023</td> <td> 0.982</td> <td>   -0.000</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AVG_PREP_VID_TIME</th>               <td>    0.0006</td> <td>    0.000</td> <td>    2.437</td> <td> 0.015</td> <td>    0.000</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TOTAL_MEALS_ORDERED</th>             <td>   -0.0009</td> <td>    0.000</td> <td>   -7.481</td> <td> 0.000</td> <td>   -0.001</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TOTAL_PHOTOS_VIEWED</th>             <td> 6.448e-05</td> <td> 1.93e-05</td> <td>    3.334</td> <td> 0.001</td> <td> 2.66e-05</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>WEEKLY_PLAN</th>                     <td>    0.0002</td> <td>    0.000</td> <td>    0.853</td> <td> 0.394</td> <td>   -0.000</td> <td>    0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>UNIQUE_MEALS_PURCH</th>              <td>    0.0541</td> <td>    0.003</td> <td>   18.359</td> <td> 0.000</td> <td>    0.048</td> <td>    0.060</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CONTACTS_W_CUSTOMER_SERVICE</th>     <td>    0.0030</td> <td>    0.006</td> <td>    0.528</td> <td> 0.598</td> <td>   -0.008</td> <td>    0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRODUCT_CATEGORIES_VIEWED</th>       <td>    0.0101</td> <td>    0.003</td> <td>    3.820</td> <td> 0.000</td> <td>    0.005</td> <td>    0.015</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CANCELLATIONS_BEFORE_NOON</th>       <td> 7.174e-06</td> <td>    0.002</td> <td>    0.004</td> <td> 0.997</td> <td>   -0.004</td> <td>    0.004</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CANCELLATIONS_AFTER_NOON</th>        <td>    0.0122</td> <td>    0.016</td> <td>    0.788</td> <td> 0.431</td> <td>   -0.018</td> <td>    0.043</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>MOBILE_LOGINS</th>                   <td>   -0.0053</td> <td>    0.004</td> <td>   -1.202</td> <td> 0.230</td> <td>   -0.014</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PC_LOGINS</th>                       <td>   -0.0019</td> <td>    0.004</td> <td>   -0.473</td> <td> 0.636</td> <td>   -0.010</td> <td>    0.006</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LARGEST_ORDER_SIZE</th>              <td>   -0.0240</td> <td>    0.007</td> <td>   -3.531</td> <td> 0.000</td> <td>   -0.037</td> <td>   -0.011</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>EARLY_DELIVERIES</th>                <td>   -0.0013</td> <td>    0.002</td> <td>   -0.807</td> <td> 0.420</td> <td>   -0.004</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LATE_DELIVERIES</th>                 <td>   -0.0003</td> <td>    0.001</td> <td>   -0.275</td> <td> 0.784</td> <td>   -0.002</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>MASTER_CLASSES_ATTENDED</th>         <td>    0.0106</td> <td>    0.009</td> <td>    1.226</td> <td> 0.220</td> <td>   -0.006</td> <td>    0.028</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>AVG_CLICKS_PER_VISIT</th>            <td>    0.0145</td> <td>    0.009</td> <td>    1.665</td> <td> 0.096</td> <td>   -0.003</td> <td>    0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>MEDIAN_MEAL_RATING</th>              <td>    0.1235</td> <td>    0.019</td> <td>    6.372</td> <td> 0.000</td> <td>    0.085</td> <td>    0.162</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CROSS_SELL_SUCCESS</th>              <td>   -0.0146</td> <td>    0.005</td> <td>   -2.879</td> <td> 0.004</td> <td>   -0.025</td> <td>   -0.005</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>MOBILE_NUMBER</th>                   <td>    0.0062</td> <td>    0.007</td> <td>    0.879</td> <td> 0.379</td> <td>   -0.008</td> <td>    0.020</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TASTES_AND_PREFERENCES</th>          <td>    0.0085</td> <td>    0.005</td> <td>    1.654</td> <td> 0.098</td> <td>   -0.002</td> <td>    0.019</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PACKAGE_LOCKER</th>                  <td>   -0.0071</td> <td>    0.005</td> <td>   -1.295</td> <td> 0.196</td> <td>   -0.018</td> <td>    0.004</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>REFRIGERATED_LOCKER</th>             <td>   -0.0078</td> <td>    0.008</td> <td>   -0.933</td> <td> 0.351</td> <td>   -0.024</td> <td>    0.009</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>log_AVG_TIME_PER_SITE_VISIT</th>     <td>    0.0190</td> <td>    0.019</td> <td>    0.989</td> <td> 0.323</td> <td>   -0.019</td> <td>    0.057</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>log_AVG_PREP_VID_TIME</th>           <td>    0.3519</td> <td>    0.090</td> <td>    3.907</td> <td> 0.000</td> <td>    0.175</td> <td>    0.528</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>log_TOTAL_MEALS_ORDERED</th>         <td>    0.4138</td> <td>    0.025</td> <td>   16.890</td> <td> 0.000</td> <td>    0.366</td> <td>    0.462</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>has_TOTAL_PHOTOS_VIEWED</th>         <td>    0.0185</td> <td>    0.007</td> <td>    2.704</td> <td> 0.007</td> <td>    0.005</td> <td>    0.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>has_WEEKLY_PLAN</th>                 <td>   -0.0152</td> <td>    0.006</td> <td>   -2.496</td> <td> 0.013</td> <td>   -0.027</td> <td>   -0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>log_UNIQUE_MEALS_PURCH</th>          <td>   -0.6318</td> <td>    0.028</td> <td>  -22.927</td> <td> 0.000</td> <td>   -0.686</td> <td>   -0.578</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>log_CONTACTS_W_CUSTOMER_SERVICE</th> <td>    0.1310</td> <td>    0.083</td> <td>    1.574</td> <td> 0.116</td> <td>   -0.032</td> <td>    0.294</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>log_PRODUCT_CATEGORIES_VIEWED</th>   <td>   -0.0915</td> <td>    0.026</td> <td>   -3.500</td> <td> 0.000</td> <td>   -0.143</td> <td>   -0.040</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>has_CANCELLATIONS_BEFORE_NOON</th>   <td>    0.0036</td> <td>    0.006</td> <td>    0.564</td> <td> 0.573</td> <td>   -0.009</td> <td>    0.016</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>has_CANCELLATIONS_AFTER_NOON</th>    <td>   -0.0258</td> <td>    0.019</td> <td>   -1.346</td> <td> 0.178</td> <td>   -0.063</td> <td>    0.012</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>log_LARGEST_ORDER_SIZE</th>          <td>    0.0735</td> <td>    0.065</td> <td>    1.139</td> <td> 0.255</td> <td>   -0.053</td> <td>    0.200</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>has_EARLY_DELIVERIES</th>            <td>    0.0026</td> <td>    0.008</td> <td>    0.342</td> <td> 0.732</td> <td>   -0.012</td> <td>    0.017</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>has_LATE_DELIVERIES</th>             <td>    0.0018</td> <td>    0.007</td> <td>    0.260</td> <td> 0.795</td> <td>   -0.012</td> <td>    0.016</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>has_MASTER_CLASSES_ATTENDED</th>     <td>    0.0207</td> <td>    0.011</td> <td>    1.856</td> <td> 0.064</td> <td>   -0.001</td> <td>    0.043</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>log_AVG_CLICKS_PER_VISIT</th>        <td>   -0.4350</td> <td>    0.261</td> <td>   -1.665</td> <td> 0.096</td> <td>   -0.947</td> <td>    0.077</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>log_MEDIAN_MEAL_RATING</th>          <td>   -0.3539</td> <td>    0.093</td> <td>   -3.825</td> <td> 0.000</td> <td>   -0.535</td> <td>   -0.172</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>personal</th>                        <td>    0.6317</td> <td>    0.077</td> <td>    8.199</td> <td> 0.000</td> <td>    0.481</td> <td>    0.783</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>professional</th>                    <td>    0.6285</td> <td>    0.077</td> <td>    8.143</td> <td> 0.000</td> <td>    0.477</td> <td>    0.780</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>410.619</td> <th>  Durbin-Watson:     </th> <td>   2.010</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>2493.443</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-0.848</td>  <th>  Prob(JB):          </th> <td>    0.00</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 8.280</td>  <th>  Cond. No.          </th> <td>2.99e+15</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The smallest eigenvalue is 1.51e-23. This might indicate that there are<br/>strong multicollinearity problems or that the design matrix is singular."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:            log_REVENUE   R-squared:                       0.778\n",
       "Model:                            OLS   Adj. R-squared:                  0.774\n",
       "Method:                 Least Squares   F-statistic:                     167.2\n",
       "Date:                Tue, 09 Feb 2021   Prob (F-statistic):               0.00\n",
       "Time:                        23:24:24   Log-Likelihood:                 1725.4\n",
       "No. Observations:                1946   AIC:                            -3369.\n",
       "Df Residuals:                    1905   BIC:                            -3140.\n",
       "Df Model:                          40                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "===================================================================================================\n",
       "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
       "---------------------------------------------------------------------------------------------------\n",
       "Intercept                           1.2602      0.154      8.175      0.000       0.958       1.563\n",
       "AVG_TIME_PER_SITE_VISIT         -1.442e-06   6.29e-05     -0.023      0.982      -0.000       0.000\n",
       "AVG_PREP_VID_TIME                   0.0006      0.000      2.437      0.015       0.000       0.001\n",
       "TOTAL_MEALS_ORDERED                -0.0009      0.000     -7.481      0.000      -0.001      -0.001\n",
       "TOTAL_PHOTOS_VIEWED              6.448e-05   1.93e-05      3.334      0.001    2.66e-05       0.000\n",
       "WEEKLY_PLAN                         0.0002      0.000      0.853      0.394      -0.000       0.001\n",
       "UNIQUE_MEALS_PURCH                  0.0541      0.003     18.359      0.000       0.048       0.060\n",
       "CONTACTS_W_CUSTOMER_SERVICE         0.0030      0.006      0.528      0.598      -0.008       0.014\n",
       "PRODUCT_CATEGORIES_VIEWED           0.0101      0.003      3.820      0.000       0.005       0.015\n",
       "CANCELLATIONS_BEFORE_NOON        7.174e-06      0.002      0.004      0.997      -0.004       0.004\n",
       "CANCELLATIONS_AFTER_NOON            0.0122      0.016      0.788      0.431      -0.018       0.043\n",
       "MOBILE_LOGINS                      -0.0053      0.004     -1.202      0.230      -0.014       0.003\n",
       "PC_LOGINS                          -0.0019      0.004     -0.473      0.636      -0.010       0.006\n",
       "LARGEST_ORDER_SIZE                 -0.0240      0.007     -3.531      0.000      -0.037      -0.011\n",
       "EARLY_DELIVERIES                   -0.0013      0.002     -0.807      0.420      -0.004       0.002\n",
       "LATE_DELIVERIES                    -0.0003      0.001     -0.275      0.784      -0.002       0.002\n",
       "MASTER_CLASSES_ATTENDED             0.0106      0.009      1.226      0.220      -0.006       0.028\n",
       "AVG_CLICKS_PER_VISIT                0.0145      0.009      1.665      0.096      -0.003       0.032\n",
       "MEDIAN_MEAL_RATING                  0.1235      0.019      6.372      0.000       0.085       0.162\n",
       "CROSS_SELL_SUCCESS                 -0.0146      0.005     -2.879      0.004      -0.025      -0.005\n",
       "MOBILE_NUMBER                       0.0062      0.007      0.879      0.379      -0.008       0.020\n",
       "TASTES_AND_PREFERENCES              0.0085      0.005      1.654      0.098      -0.002       0.019\n",
       "PACKAGE_LOCKER                     -0.0071      0.005     -1.295      0.196      -0.018       0.004\n",
       "REFRIGERATED_LOCKER                -0.0078      0.008     -0.933      0.351      -0.024       0.009\n",
       "log_AVG_TIME_PER_SITE_VISIT         0.0190      0.019      0.989      0.323      -0.019       0.057\n",
       "log_AVG_PREP_VID_TIME               0.3519      0.090      3.907      0.000       0.175       0.528\n",
       "log_TOTAL_MEALS_ORDERED             0.4138      0.025     16.890      0.000       0.366       0.462\n",
       "has_TOTAL_PHOTOS_VIEWED             0.0185      0.007      2.704      0.007       0.005       0.032\n",
       "has_WEEKLY_PLAN                    -0.0152      0.006     -2.496      0.013      -0.027      -0.003\n",
       "log_UNIQUE_MEALS_PURCH             -0.6318      0.028    -22.927      0.000      -0.686      -0.578\n",
       "log_CONTACTS_W_CUSTOMER_SERVICE     0.1310      0.083      1.574      0.116      -0.032       0.294\n",
       "log_PRODUCT_CATEGORIES_VIEWED      -0.0915      0.026     -3.500      0.000      -0.143      -0.040\n",
       "has_CANCELLATIONS_BEFORE_NOON       0.0036      0.006      0.564      0.573      -0.009       0.016\n",
       "has_CANCELLATIONS_AFTER_NOON       -0.0258      0.019     -1.346      0.178      -0.063       0.012\n",
       "log_LARGEST_ORDER_SIZE              0.0735      0.065      1.139      0.255      -0.053       0.200\n",
       "has_EARLY_DELIVERIES                0.0026      0.008      0.342      0.732      -0.012       0.017\n",
       "has_LATE_DELIVERIES                 0.0018      0.007      0.260      0.795      -0.012       0.016\n",
       "has_MASTER_CLASSES_ATTENDED         0.0207      0.011      1.856      0.064      -0.001       0.043\n",
       "log_AVG_CLICKS_PER_VISIT           -0.4350      0.261     -1.665      0.096      -0.947       0.077\n",
       "log_MEDIAN_MEAL_RATING             -0.3539      0.093     -3.825      0.000      -0.535      -0.172\n",
       "personal                            0.6317      0.077      8.199      0.000       0.481       0.783\n",
       "professional                        0.6285      0.077      8.143      0.000       0.477       0.780\n",
       "==============================================================================\n",
       "Omnibus:                      410.619   Durbin-Watson:                   2.010\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             2493.443\n",
       "Skew:                          -0.848   Prob(JB):                         0.00\n",
       "Kurtosis:                       8.280   Cond. No.                     2.99e+15\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The smallest eigenvalue is 1.51e-23. This might indicate that there are\n",
       "strong multicollinearity problems or that the design matrix is singular.\n",
       "\"\"\""
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Building a Full Model for elimination\n",
    "\n",
    "lm_full = smf.ols(formula = \"\"\" log_REVENUE ~                        \n",
    "AVG_TIME_PER_SITE_VISIT +\n",
    "AVG_PREP_VID_TIME +\n",
    "TOTAL_MEALS_ORDERED +\n",
    "TOTAL_PHOTOS_VIEWED + \n",
    "WEEKLY_PLAN +  \n",
    "UNIQUE_MEALS_PURCH +  \n",
    "CONTACTS_W_CUSTOMER_SERVICE +  \n",
    "PRODUCT_CATEGORIES_VIEWED + \n",
    "CANCELLATIONS_BEFORE_NOON +  \n",
    "CANCELLATIONS_AFTER_NOON +  \n",
    "MOBILE_LOGINS  + \n",
    "PC_LOGINS  + \n",
    "LARGEST_ORDER_SIZE +  \n",
    "EARLY_DELIVERIES +  \n",
    "LATE_DELIVERIES  + \n",
    "MASTER_CLASSES_ATTENDED +\n",
    "AVG_CLICKS_PER_VISIT  + \n",
    "MEDIAN_MEAL_RATING +\n",
    "CROSS_SELL_SUCCESS  + \n",
    "MOBILE_NUMBER  + \n",
    "TASTES_AND_PREFERENCES +  \n",
    "PACKAGE_LOCKER +  \n",
    "REFRIGERATED_LOCKER +  \n",
    "log_AVG_TIME_PER_SITE_VISIT +  \n",
    "log_AVG_PREP_VID_TIME +  \n",
    "log_TOTAL_MEALS_ORDERED +  \n",
    "has_TOTAL_PHOTOS_VIEWED +  \n",
    "has_WEEKLY_PLAN  + \n",
    "log_UNIQUE_MEALS_PURCH +  \n",
    "log_CONTACTS_W_CUSTOMER_SERVICE +  \n",
    "log_PRODUCT_CATEGORIES_VIEWED +  \n",
    "has_CANCELLATIONS_BEFORE_NOON +  \n",
    "has_CANCELLATIONS_AFTER_NOON +  \n",
    "MOBILE_LOGINS +  \n",
    "PC_LOGINS +  \n",
    "log_LARGEST_ORDER_SIZE +  \n",
    "has_EARLY_DELIVERIES  + \n",
    "has_LATE_DELIVERIES  + \n",
    "has_MASTER_CLASSES_ATTENDED  + \n",
    "log_AVG_CLICKS_PER_VISIT  + \n",
    "log_MEDIAN_MEAL_RATING  + \n",
    "personal   +\n",
    "professional  \n",
    "\"\"\",\n",
    "data = data_df)\n",
    "\n",
    "\n",
    "# telling Python to run the data through the blueprint\n",
    "results_full = lm_full.fit()\n",
    "\n",
    "\n",
    "# printing the results\n",
    "results_full.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "danish-capability",
   "metadata": {},
   "source": [
    "## Building a Model with selected features that has good pvalues"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "extraordinary-advancement",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>       <td>log_REVENUE</td>   <th>  R-squared:         </th> <td>   0.763</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.762</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   444.6</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Tue, 09 Feb 2021</td> <th>  Prob (F-statistic):</th>  <td>  0.00</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>23:24:24</td>     <th>  Log-Likelihood:    </th> <td>  1661.4</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>  1946</td>      <th>  AIC:               </th> <td>  -3293.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>  1931</td>      <th>  BIC:               </th> <td>  -3209.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>    14</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "                 <td></td>                    <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>                       <td>    1.4430</td> <td>    0.060</td> <td>   23.888</td> <td> 0.000</td> <td>    1.325</td> <td>    1.562</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TOTAL_PHOTOS_VIEWED</th>             <td> 9.462e-05</td> <td> 1.47e-05</td> <td>    6.450</td> <td> 0.000</td> <td> 6.58e-05</td> <td>    0.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>log_AVG_PREP_VID_TIME</th>           <td>    0.5800</td> <td>    0.034</td> <td>   17.101</td> <td> 0.000</td> <td>    0.513</td> <td>    0.646</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>log_TOTAL_MEALS_ORDERED</th>         <td>    0.2623</td> <td>    0.010</td> <td>   25.378</td> <td> 0.000</td> <td>    0.242</td> <td>    0.283</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>has_WEEKLY_PLAN</th>                 <td>   -0.0123</td> <td>    0.005</td> <td>   -2.245</td> <td> 0.025</td> <td>   -0.023</td> <td>   -0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>UNIQUE_MEALS_PURCH</th>              <td>    0.0481</td> <td>    0.003</td> <td>   16.872</td> <td> 0.000</td> <td>    0.042</td> <td>    0.054</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>PRODUCT_CATEGORIES_VIEWED</th>       <td>    0.0015</td> <td>    0.001</td> <td>    1.989</td> <td> 0.047</td> <td> 2.12e-05</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>LARGEST_ORDER_SIZE</th>              <td>   -0.0155</td> <td>    0.003</td> <td>   -6.018</td> <td> 0.000</td> <td>   -0.020</td> <td>   -0.010</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>MEDIAN_MEAL_RATING</th>              <td>    0.0644</td> <td>    0.004</td> <td>   16.061</td> <td> 0.000</td> <td>    0.057</td> <td>    0.072</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>log_UNIQUE_MEALS_PURCH</th>          <td>   -0.5824</td> <td>    0.026</td> <td>  -22.211</td> <td> 0.000</td> <td>   -0.634</td> <td>   -0.531</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>log_CONTACTS_W_CUSTOMER_SERVICE</th> <td>    0.1296</td> <td>    0.017</td> <td>    7.538</td> <td> 0.000</td> <td>    0.096</td> <td>    0.163</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>has_CANCELLATIONS_AFTER_NOON</th>    <td>   -0.0113</td> <td>    0.007</td> <td>   -1.685</td> <td> 0.092</td> <td>   -0.025</td> <td>    0.002</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>has_MASTER_CLASSES_ATTENDED</th>     <td>    0.0358</td> <td>    0.006</td> <td>    6.479</td> <td> 0.000</td> <td>    0.025</td> <td>    0.047</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>TASTES_AND_PREFERENCES</th>          <td>    0.0107</td> <td>    0.005</td> <td>    2.040</td> <td> 0.042</td> <td>    0.000</td> <td>    0.021</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>CROSS_SELL_SUCCESS</th>              <td>   -0.0122</td> <td>    0.005</td> <td>   -2.409</td> <td> 0.016</td> <td>   -0.022</td> <td>   -0.002</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>363.426</td> <th>  Durbin-Watson:     </th> <td>   2.032</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>2122.443</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-0.745</td>  <th>  Prob(JB):          </th> <td>    0.00</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 7.895</td>  <th>  Cond. No.          </th> <td>6.12e+03</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 6.12e+03. This might indicate that there are<br/>strong multicollinearity or other numerical problems."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:            log_REVENUE   R-squared:                       0.763\n",
       "Model:                            OLS   Adj. R-squared:                  0.762\n",
       "Method:                 Least Squares   F-statistic:                     444.6\n",
       "Date:                Tue, 09 Feb 2021   Prob (F-statistic):               0.00\n",
       "Time:                        23:24:24   Log-Likelihood:                 1661.4\n",
       "No. Observations:                1946   AIC:                            -3293.\n",
       "Df Residuals:                    1931   BIC:                            -3209.\n",
       "Df Model:                          14                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "===================================================================================================\n",
       "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
       "---------------------------------------------------------------------------------------------------\n",
       "Intercept                           1.4430      0.060     23.888      0.000       1.325       1.562\n",
       "TOTAL_PHOTOS_VIEWED              9.462e-05   1.47e-05      6.450      0.000    6.58e-05       0.000\n",
       "log_AVG_PREP_VID_TIME               0.5800      0.034     17.101      0.000       0.513       0.646\n",
       "log_TOTAL_MEALS_ORDERED             0.2623      0.010     25.378      0.000       0.242       0.283\n",
       "has_WEEKLY_PLAN                    -0.0123      0.005     -2.245      0.025      -0.023      -0.002\n",
       "UNIQUE_MEALS_PURCH                  0.0481      0.003     16.872      0.000       0.042       0.054\n",
       "PRODUCT_CATEGORIES_VIEWED           0.0015      0.001      1.989      0.047    2.12e-05       0.003\n",
       "LARGEST_ORDER_SIZE                 -0.0155      0.003     -6.018      0.000      -0.020      -0.010\n",
       "MEDIAN_MEAL_RATING                  0.0644      0.004     16.061      0.000       0.057       0.072\n",
       "log_UNIQUE_MEALS_PURCH             -0.5824      0.026    -22.211      0.000      -0.634      -0.531\n",
       "log_CONTACTS_W_CUSTOMER_SERVICE     0.1296      0.017      7.538      0.000       0.096       0.163\n",
       "has_CANCELLATIONS_AFTER_NOON       -0.0113      0.007     -1.685      0.092      -0.025       0.002\n",
       "has_MASTER_CLASSES_ATTENDED         0.0358      0.006      6.479      0.000       0.025       0.047\n",
       "TASTES_AND_PREFERENCES              0.0107      0.005      2.040      0.042       0.000       0.021\n",
       "CROSS_SELL_SUCCESS                 -0.0122      0.005     -2.409      0.016      -0.022      -0.002\n",
       "==============================================================================\n",
       "Omnibus:                      363.426   Durbin-Watson:                   2.032\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             2122.443\n",
       "Skew:                          -0.745   Prob(JB):                         0.00\n",
       "Kurtosis:                       7.895   Cond. No.                     6.12e+03\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 6.12e+03. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lm_full = smf.ols(formula = \"\"\" log_REVENUE ~                        \n",
    "TOTAL_PHOTOS_VIEWED +\n",
    "log_AVG_PREP_VID_TIME +\n",
    "log_TOTAL_MEALS_ORDERED +\n",
    "has_WEEKLY_PLAN +\n",
    "UNIQUE_MEALS_PURCH +\n",
    "PRODUCT_CATEGORIES_VIEWED +\n",
    "LARGEST_ORDER_SIZE +\n",
    "MEDIAN_MEAL_RATING +\n",
    "log_UNIQUE_MEALS_PURCH +\n",
    "log_CONTACTS_W_CUSTOMER_SERVICE +\n",
    "has_CANCELLATIONS_AFTER_NOON +\n",
    "has_MASTER_CLASSES_ATTENDED +\n",
    "TASTES_AND_PREFERENCES +\n",
    "CROSS_SELL_SUCCESS\"\"\",\n",
    "data = data_df)\n",
    "\n",
    "\n",
    "# telling Python to run the data through the blueprint\n",
    "results_full = lm_full.fit()\n",
    "\n",
    "\n",
    "# printing the results\n",
    "results_full.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "after-concentrate",
   "metadata": {},
   "source": [
    "# Preparing Explanatory Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "limited-sight",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Training Data\n",
      "-------------\n",
      "X-side: (1459, 43)\n",
      "y-side: (1459,)\n",
      "\n",
      "Testing Data\n",
      "------------\n",
      "X-side: (487, 43)\n",
      "y-side: (487,)\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# preparing explanatory variable data\n",
    "model_data   = data_df.drop([\n",
    "    'NAME',\n",
    "    'FIRST_NAME',\n",
    "    'FAMILY_NAME'], axis = 1)\n",
    "\n",
    "\n",
    "# preparing response variable data\n",
    "data_df_target = data_df.loc[ : , 'REVENUE']\n",
    "log_data_df_target = data_df.loc[ : , 'log_REVENUE'] # ready for use later\n",
    "\n",
    "\n",
    "# preparing training and testing sets (all letters are lowercase)\n",
    "x_train, x_test, y_train, y_test = train_test_split(\n",
    "           model_data,\n",
    "            data_df_target,\n",
    "            test_size = 0.25,\n",
    "            random_state = 219)\n",
    "\n",
    "\n",
    "# checking the shapes of the datasets\n",
    "print(f\"\"\"\n",
    "Training Data\n",
    "-------------\n",
    "X-side: {x_train.shape}\n",
    "y-side: {y_train.shape}\n",
    "\n",
    "Testing Data\n",
    "------------\n",
    "X-side: {x_test.shape}\n",
    "y-side: {y_test.shape}\n",
    "\"\"\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "disabled-matrix",
   "metadata": {},
   "source": [
    "# Ordinary Least Squares Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "alternative-prompt",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "TOTAL_PHOTOS_VIEWED +\n",
      "log_AVG_PREP_VID_TIME +\n",
      "log_TOTAL_MEALS_ORDERED +\n",
      "has_WEEKLY_PLAN +\n",
      "UNIQUE_MEALS_PURCH +\n",
      "PRODUCT_CATEGORIES_VIEWED +\n",
      "LARGEST_ORDER_SIZE +\n",
      "MEDIAN_MEAL_RATING +\n",
      "log_UNIQUE_MEALS_PURCH +\n",
      "log_CONTACTS_W_CUSTOMER_SERVICE +\n",
      "has_CANCELLATIONS_AFTER_NOON +\n",
      "has_MASTER_CLASSES_ATTENDED +\n",
      "TASTES_AND_PREFERENCES +\n",
      "CROSS_SELL_SUCCESS +\n"
     ]
    }
   ],
   "source": [
    "# declaring set of x-variables\n",
    "x_variables = [\n",
    "'TOTAL_PHOTOS_VIEWED',\n",
    "'log_AVG_PREP_VID_TIME',\n",
    "'log_TOTAL_MEALS_ORDERED',\n",
    "'has_WEEKLY_PLAN',\n",
    "'UNIQUE_MEALS_PURCH',\n",
    "'PRODUCT_CATEGORIES_VIEWED',\n",
    "'LARGEST_ORDER_SIZE',\n",
    "'MEDIAN_MEAL_RATING',\n",
    "'log_UNIQUE_MEALS_PURCH',\n",
    "'log_CONTACTS_W_CUSTOMER_SERVICE',\n",
    "'has_CANCELLATIONS_AFTER_NOON',\n",
    "'has_MASTER_CLASSES_ATTENDED',\n",
    "'TASTES_AND_PREFERENCES',\n",
    "'CROSS_SELL_SUCCESS'\n",
    "]\n",
    "\n",
    "# looping to make x-variables suitable for statsmodels\n",
    "for val in x_variables:\n",
    "    print(f\"{val} +\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "intended-access",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                            OLS Regression Results                            \n",
      "==============================================================================\n",
      "Dep. Variable:            log_REVENUE   R-squared:                       0.764\n",
      "Model:                            OLS   Adj. R-squared:                  0.761\n",
      "Method:                 Least Squares   F-statistic:                     333.2\n",
      "Date:                Tue, 09 Feb 2021   Prob (F-statistic):               0.00\n",
      "Time:                        23:24:33   Log-Likelihood:                 1263.8\n",
      "No. Observations:                1459   AIC:                            -2498.\n",
      "Df Residuals:                    1444   BIC:                            -2418.\n",
      "Df Model:                          14                                         \n",
      "Covariance Type:            nonrobust                                         \n",
      "===================================================================================================\n",
      "                                      coef    std err          t      P>|t|      [0.025      0.975]\n",
      "---------------------------------------------------------------------------------------------------\n",
      "Intercept                           1.5111      0.070     21.615      0.000       1.374       1.648\n",
      "TOTAL_PHOTOS_VIEWED              9.515e-05   1.67e-05      5.692      0.000    6.24e-05       0.000\n",
      "log_AVG_PREP_VID_TIME               0.5644      0.039     14.442      0.000       0.488       0.641\n",
      "log_TOTAL_MEALS_ORDERED             0.2587      0.012     21.642      0.000       0.235       0.282\n",
      "has_WEEKLY_PLAN                    -0.0120      0.006     -1.917      0.055      -0.024       0.000\n",
      "UNIQUE_MEALS_PURCH                  0.0476      0.003     14.697      0.000       0.041       0.054\n",
      "PRODUCT_CATEGORIES_VIEWED           0.0015      0.001      1.697      0.090      -0.000       0.003\n",
      "LARGEST_ORDER_SIZE                 -0.0155      0.003     -5.223      0.000      -0.021      -0.010\n",
      "MEDIAN_MEAL_RATING                  0.0635      0.005     13.843      0.000       0.055       0.073\n",
      "log_UNIQUE_MEALS_PURCH             -0.5897      0.030    -19.709      0.000      -0.648      -0.531\n",
      "log_CONTACTS_W_CUSTOMER_SERVICE     0.1038      0.020      5.233      0.000       0.065       0.143\n",
      "has_CANCELLATIONS_AFTER_NOON       -0.0052      0.008     -0.686      0.493      -0.020       0.010\n",
      "has_MASTER_CLASSES_ATTENDED         0.0391      0.006      6.189      0.000       0.027       0.052\n",
      "TASTES_AND_PREFERENCES              0.0117      0.006      1.975      0.048    8.22e-05       0.023\n",
      "CROSS_SELL_SUCCESS                 -0.0155      0.006     -2.699      0.007      -0.027      -0.004\n",
      "==============================================================================\n",
      "Omnibus:                      205.786   Durbin-Watson:                   2.070\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              896.006\n",
      "Skew:                          -0.603   Prob(JB):                    2.72e-195\n",
      "Kurtosis:                       6.645   Cond. No.                     6.24e+03\n",
      "==============================================================================\n",
      "\n",
      "Notes:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[2] The condition number is large, 6.24e+03. This might indicate that there are\n",
      "strong multicollinearity or other numerical problems.\n"
     ]
    }
   ],
   "source": [
    "# merging X_train and y_train so that they can be used in statsmodels\n",
    "data_df_train = pd.concat([x_train, y_train], axis = 1)\n",
    "\n",
    "\n",
    "# Step 1: build a model\n",
    "lm_best = smf.ols(formula =  \"\"\"log_REVENUE ~ \n",
    "TOTAL_PHOTOS_VIEWED +\n",
    "log_AVG_PREP_VID_TIME +\n",
    "log_TOTAL_MEALS_ORDERED +\n",
    "has_WEEKLY_PLAN +\n",
    "UNIQUE_MEALS_PURCH +\n",
    "PRODUCT_CATEGORIES_VIEWED +\n",
    "LARGEST_ORDER_SIZE +\n",
    "MEDIAN_MEAL_RATING +\n",
    "log_UNIQUE_MEALS_PURCH +\n",
    "log_CONTACTS_W_CUSTOMER_SERVICE +\n",
    "has_CANCELLATIONS_AFTER_NOON +\n",
    "has_MASTER_CLASSES_ATTENDED +\n",
    "TASTES_AND_PREFERENCES +\n",
    "CROSS_SELL_SUCCESS\"\"\", data = data_df_train)\n",
    "\n",
    "\n",
    "# Step 2: fit the model based on the data\n",
    "results = lm_best.fit()\n",
    "\n",
    "# Step 3: analyze the summary output\n",
    "print(results.summary())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "swedish-scientist",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Applying model in scikit-learn\n",
    "\n",
    "# Preparing a DataFrame based the the analysis above\n",
    "ols_data   = data_df.loc[ : , x_variables]\n",
    "\n",
    "\n",
    "# Preparing the target variable\n",
    "data_df_target = data_df.loc[ : , 'log_REVENUE']\n",
    "\n",
    "\n",
    "\n",
    "x_train_FULL, x_test_FULL, y_train_FULL, y_test_FULL = train_test_split(\n",
    "            model_data,     # x-variables\n",
    "            data_df_target,   # y-variable\n",
    "            test_size = 0.25,\n",
    "            random_state = 219)\n",
    "\n",
    "\n",
    "\n",
    "x_train_OLS, x_test_OLS, y_train_OLS, y_test_OLS = train_test_split(\n",
    "            ols_data,         # x-variables\n",
    "            data_df_target,   # y-variable\n",
    "            test_size = 0.25,\n",
    "            random_state = 219)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "lesser-lloyd",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "OLS Training Score : 0.7636\n",
      "OLS Testing Score  : 0.7584\n",
      "OLS Train-Test Gap : 0.0052\n"
     ]
    }
   ],
   "source": [
    "# INSTANTIATING a model object\n",
    "lr = LinearRegression()\n",
    "\n",
    "\n",
    "# FITTING to the training data\n",
    "lr_fit = lr.fit(x_train_OLS, y_train_OLS)\n",
    "\n",
    "\n",
    "# PREDICTING on new data\n",
    "lr_pred = lr_fit.predict(x_test_OLS)\n",
    "\n",
    "\n",
    "# SCORING the results\n",
    "print('OLS Training Score :', lr.score(x_train_OLS, y_train_OLS).round(4))\n",
    "print('OLS Testing Score  :', lr.score(x_test_OLS, y_test_OLS).round(4))\n",
    "\n",
    "\n",
    "# saving scoring data for future use\n",
    "lr_train_score = lr.score(x_train_OLS, y_train_OLS).round(4) \n",
    "lr_test_score  = lr.score(x_test_OLS, y_test_OLS).round(4)  \n",
    "\n",
    "\n",
    "# displaying and saving the gap between training and testing\n",
    "print('OLS Train-Test Gap :', abs(lr_train_score - lr_test_score).round(4))\n",
    "lr_test_gap = abs(lr_train_score - lr_test_score).round(4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "fewer-theorem",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('intercept', 1.51)\n",
      "('TOTAL_PHOTOS_VIEWED', 0.0)\n",
      "('log_AVG_PREP_VID_TIME', 0.56)\n",
      "('log_TOTAL_MEALS_ORDERED', 0.26)\n",
      "('has_WEEKLY_PLAN', -0.01)\n",
      "('UNIQUE_MEALS_PURCH', 0.05)\n",
      "('PRODUCT_CATEGORIES_VIEWED', 0.0)\n",
      "('LARGEST_ORDER_SIZE', -0.02)\n",
      "('MEDIAN_MEAL_RATING', 0.06)\n",
      "('log_UNIQUE_MEALS_PURCH', -0.59)\n",
      "('log_CONTACTS_W_CUSTOMER_SERVICE', 0.1)\n",
      "('has_CANCELLATIONS_AFTER_NOON', -0.01)\n",
      "('has_MASTER_CLASSES_ATTENDED', 0.04)\n",
      "('TASTES_AND_PREFERENCES', 0.01)\n",
      "('CROSS_SELL_SUCCESS', -0.02)\n"
     ]
    }
   ],
   "source": [
    "# zipping each feature name to its coefficient\n",
    "lr_model_values = zip(model_data[x_variables].columns,\n",
    "                      lr_fit.coef_.round(decimals = 2))\n",
    "\n",
    "\n",
    "# setting up a placeholder list to store model features\n",
    "lr_model_lst = [('intercept', lr_fit.intercept_.round(decimals = 2))]\n",
    "\n",
    "\n",
    "# printing out each feature-coefficient pair one by one\n",
    "for val in lr_model_values:\n",
    "    lr_model_lst.append(val)\n",
    "    \n",
    "\n",
    "# checking the results\n",
    "for pair in lr_model_lst:\n",
    "    print(pair)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "usual-butter",
   "metadata": {},
   "source": [
    "# ARD"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "hundred-telescope",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "import sklearn.linear_model # linear models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "straight-explorer",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Preparing set of x variables for the model\n",
    "x_var_ard = [\n",
    "'TOTAL_PHOTOS_VIEWED',\n",
    "'log_AVG_PREP_VID_TIME',\n",
    "'log_TOTAL_MEALS_ORDERED',\n",
    "'has_WEEKLY_PLAN',\n",
    "'UNIQUE_MEALS_PURCH',\n",
    "'PRODUCT_CATEGORIES_VIEWED',\n",
    "'LARGEST_ORDER_SIZE',\n",
    "'MEDIAN_MEAL_RATING',\n",
    "'log_UNIQUE_MEALS_PURCH',\n",
    "'log_CONTACTS_W_CUSTOMER_SERVICE',\n",
    "'has_CANCELLATIONS_AFTER_NOON',\n",
    "'has_MASTER_CLASSES_ATTENDED',\n",
    "'TASTES_AND_PREFERENCES',\n",
    "'CROSS_SELL_SUCCESS'\n",
    "]\n",
    "\n",
    "# preparing explanatory variable data\n",
    "ard_data = model_data[x_var_ard]\n",
    "\n",
    "# preparing response variables\n",
    "log_dataset_target = model_data.loc[ : , 'log_REVENUE']\n",
    "\n",
    "\n",
    "# FULL X-dataset (log Y)\n",
    "x_train_ard, x_test_ard, y_train_ard, y_test_ard = train_test_split(\n",
    "            ard_data ,            # x-variables\n",
    "            log_dataset_target,   # y-variable\n",
    "            test_size = 0.25,\n",
    "            random_state = 219)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "authentic-mandate",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training Score: 0.7571\n",
      "Testing Score : 0.7525\n",
      "ARD Train-Test Gap : 0.0046\n"
     ]
    }
   ],
   "source": [
    "# INSTANTIATING a model object\n",
    "ard_model = sklearn.linear_model.ARDRegression(normalize  = False)\n",
    "\n",
    "\n",
    "# FITTING the training data\n",
    "ard_fit = ard_model.fit(x_train_ard, y_train_ard)\n",
    "\n",
    "\n",
    "# PREDICTING on new data\n",
    "ard_pred = ard_fit.predict(x_test_ard)\n",
    "\n",
    "\n",
    "print('Training Score:', ard_model.score(x_train_ard, y_train_ard).round(4))\n",
    "print('Testing Score :',  ard_model.score(x_test_ard, y_test_ard).round(4))\n",
    "\n",
    "\n",
    "# saving scoring data for future use\n",
    "ard_train_score = ard_model.score(x_train_ard, y_train_ard).round(4)\n",
    "ard_test_score  = ard_model.score(x_test_ard, y_test_ard).round(4)\n",
    "\n",
    "\n",
    "# displaying and saving the gap between training and testing\n",
    "print('ARD Train-Test Gap :', abs(ard_train_score - ard_test_score).round(4))\n",
    "ard_test_gap = abs(ard_train_score - ard_test_score).round(4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "interior-mixture",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('intercept', 1.46)\n",
      "('TOTAL_PHOTOS_VIEWED', 0.0)\n",
      "('log_AVG_PREP_VID_TIME', 0.57953)\n",
      "('log_TOTAL_MEALS_ORDERED', 0.26658)\n",
      "('has_WEEKLY_PLAN', -0.01014)\n",
      "('UNIQUE_MEALS_PURCH', 0.04739)\n",
      "('PRODUCT_CATEGORIES_VIEWED', 0.0)\n",
      "('LARGEST_ORDER_SIZE', -0.01428)\n",
      "('MEDIAN_MEAL_RATING', 0.06739)\n",
      "('log_UNIQUE_MEALS_PURCH', -0.5862)\n",
      "('log_CONTACTS_W_CUSTOMER_SERVICE', 0.11894)\n",
      "('has_CANCELLATIONS_AFTER_NOON', 0.0)\n",
      "('has_MASTER_CLASSES_ATTENDED', 0.04085)\n",
      "('TASTES_AND_PREFERENCES', 0.0)\n",
      "('CROSS_SELL_SUCCESS', -0.01267)\n"
     ]
    }
   ],
   "source": [
    "# zipping each feature name to its coefficient\n",
    "ard_model_values = zip(ard_data.columns, ard_fit.coef_.round(decimals = 5))\n",
    "\n",
    "\n",
    "# setting up a placeholder list to store model features\n",
    "ard_model_lst = [('intercept', ard_fit.intercept_.round(decimals = 2))]\n",
    "\n",
    "\n",
    "# printing out each feature-coefficient pair one by one\n",
    "for val in ard_model_values:\n",
    "    ard_model_lst.append(val)\n",
    "    \n",
    "\n",
    "# checking the results\n",
    "for pair in ard_model_lst:\n",
    "    print(pair)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "perceived-scientist",
   "metadata": {},
   "source": [
    "# LASSO"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "timely-scanning",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Preparing set of x variables for the model\n",
    "x_var_lasso = [\n",
    "'TOTAL_PHOTOS_VIEWED',\n",
    "'log_AVG_PREP_VID_TIME',\n",
    "'log_TOTAL_MEALS_ORDERED',\n",
    "'has_WEEKLY_PLAN',\n",
    "'UNIQUE_MEALS_PURCH',\n",
    "'PRODUCT_CATEGORIES_VIEWED',\n",
    "'LARGEST_ORDER_SIZE',\n",
    "'MEDIAN_MEAL_RATING',\n",
    "'log_UNIQUE_MEALS_PURCH',\n",
    "'log_CONTACTS_W_CUSTOMER_SERVICE',\n",
    "'has_CANCELLATIONS_AFTER_NOON',\n",
    "'has_MASTER_CLASSES_ATTENDED',\n",
    "'has_TOTAL_PHOTOS_VIEWED',\n",
    "'WEEKLY_PLAN',\n",
    "'CANCELLATIONS_BEFORE_NOON', \n",
    "'CANCELLATIONS_AFTER_NOON', \n",
    "'MASTER_CLASSES_ATTENDED', \n",
    "'personal',\n",
    "'professional',\n",
    "'MOBILE_NUMBER']\n",
    "\n",
    "# Preparing explanatory variable data\n",
    "lasso_data = model_data[x_var_lasso]\n",
    "\n",
    "# Preparing response variables\n",
    "data_df_target = model_data.loc[ : , 'REVENUE']\n",
    "\n",
    "\n",
    "# FULL X-dataset (log Y)\n",
    "x_train_lasso, x_test_lasso, y_train_lasso, y_test_lasso = train_test_split(\n",
    "            lasso_data ,              # x-variables\n",
    "            data_df_target,   # y-variable\n",
    "            test_size = 0.25,\n",
    "            random_state = 219)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "welsh-publicity",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Lasso Training Score : 0.6891\n",
      "Lasso Testing Score  : 0.695\n",
      "Lasso Train-Test Gap : 0.0052\n"
     ]
    }
   ],
   "source": [
    "# INSTANTIATING a model object \n",
    "# lasso -> which variable is signigficant (value is less than 0,05)-> Lasso shrinking coefficient, to make the model stable)\n",
    "lasso_model = sklearn.linear_model.Lasso(alpha = 0.001,\n",
    "                                         normalize = True) # default magitude\n",
    "\n",
    "\n",
    "# FITTING to the training data\n",
    "lasso_fit = lasso_model.fit(x_train_lasso, y_train_lasso)\n",
    "\n",
    "\n",
    "# PREDICTING on new data\n",
    "lasso_pred = lasso_fit.predict(x_test_lasso)\n",
    "\n",
    "\n",
    "# SCORING the results\n",
    "print('Lasso Training Score :', lasso_model.score(x_train_lasso, y_train_lasso).round(4))\n",
    "print('Lasso Testing Score  :', lasso_model.score(x_test_lasso, y_test_lasso).round(4))\n",
    "\n",
    "\n",
    "## the following code has been provided for you ##\n",
    "\n",
    "# saving scoring data for future use\n",
    "lasso_train_score = lasso_model.score(x_train_lasso, y_train_lasso).round(4) # using R-square\n",
    "lasso_test_score  = lasso_model.score(x_test_lasso, y_test_lasso).round(4)   # using R-square\n",
    "\n",
    "\n",
    "# displaying and saving the gap between training and testing\n",
    "print('Lasso Train-Test Gap :', abs(lr_train_score - lr_test_score).round(4))\n",
    "lasso_test_gap = abs(lr_train_score - lr_test_score).round(4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "judicial-islam",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('intercept', -6421.77)\n",
      "('TOTAL_PHOTOS_VIEWED', 0.94)\n",
      "('log_AVG_PREP_VID_TIME', 2417.11)\n",
      "('log_TOTAL_MEALS_ORDERED', 1187.16)\n",
      "('has_WEEKLY_PLAN', -71.44)\n",
      "('UNIQUE_MEALS_PURCH', 266.61)\n",
      "('PRODUCT_CATEGORIES_VIEWED', 10.65)\n",
      "('LARGEST_ORDER_SIZE', -43.64)\n",
      "('MEDIAN_MEAL_RATING', 311.88)\n",
      "('log_UNIQUE_MEALS_PURCH', -3227.39)\n",
      "('log_CONTACTS_W_CUSTOMER_SERVICE', 1288.68)\n",
      "('has_CANCELLATIONS_AFTER_NOON', -65.7)\n",
      "('has_MASTER_CLASSES_ATTENDED', -1.99)\n",
      "('has_TOTAL_PHOTOS_VIEWED', -53.64)\n",
      "('WEEKLY_PLAN', 0.87)\n",
      "('CANCELLATIONS_BEFORE_NOON', 0.92)\n",
      "('CANCELLATIONS_AFTER_NOON', 65.78)\n",
      "('MASTER_CLASSES_ATTENDED', 168.06)\n",
      "('personal', 16.12)\n",
      "('professional', -0.0)\n",
      "('MOBILE_NUMBER', -22.33)\n"
     ]
    }
   ],
   "source": [
    "# zipping each feature name to its coefficient\n",
    "lasso_model_values = zip(lasso_data.columns, lasso_fit.coef_.round(decimals = 2))\n",
    "\n",
    "\n",
    "# setting up a placeholder list to store model features\n",
    "lasso_model_lst = [('intercept', lasso_fit.intercept_.round(decimals = 2))]\n",
    "\n",
    "\n",
    "# printing out each feature-coefficient pair one by one\n",
    "for val in lasso_model_values:\n",
    "    lasso_model_lst.append(val)\n",
    "    \n",
    "\n",
    "# checking the results\n",
    "for pair in lasso_model_lst:\n",
    "    print(pair)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "removable-poland",
   "metadata": {},
   "source": [
    "# KNN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "laden-agency",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "from sklearn.neighbors import KNeighborsRegressor # KNN for Regression\n",
    "from sklearn.preprocessing import StandardScaler # standard scaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "third-stockholm",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "      <th>12</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1946.00</td>\n",
       "      <td>1946.00</td>\n",
       "      <td>1946.00</td>\n",
       "      <td>1946.00</td>\n",
       "      <td>1946.00</td>\n",
       "      <td>1946.00</td>\n",
       "      <td>1946.00</td>\n",
       "      <td>1946.00</td>\n",
       "      <td>1946.00</td>\n",
       "      <td>1946.00</td>\n",
       "      <td>1946.00</td>\n",
       "      <td>1946.00</td>\n",
       "      <td>1946.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.00</td>\n",
       "      <td>-0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>-0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>-0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>-0.00</td>\n",
       "      <td>-0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>-0.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-4.55</td>\n",
       "      <td>-2.30</td>\n",
       "      <td>-0.84</td>\n",
       "      <td>-1.78</td>\n",
       "      <td>-2.27</td>\n",
       "      <td>-5.60</td>\n",
       "      <td>-3.88</td>\n",
       "      <td>-5.38</td>\n",
       "      <td>-3.08</td>\n",
       "      <td>-0.41</td>\n",
       "      <td>-1.04</td>\n",
       "      <td>-0.89</td>\n",
       "      <td>-1.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>-0.70</td>\n",
       "      <td>-0.55</td>\n",
       "      <td>-0.84</td>\n",
       "      <td>0.56</td>\n",
       "      <td>-0.52</td>\n",
       "      <td>-0.83</td>\n",
       "      <td>-0.89</td>\n",
       "      <td>-0.56</td>\n",
       "      <td>-0.91</td>\n",
       "      <td>-0.41</td>\n",
       "      <td>-1.04</td>\n",
       "      <td>-0.89</td>\n",
       "      <td>-1.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.05</td>\n",
       "      <td>0.04</td>\n",
       "      <td>-0.84</td>\n",
       "      <td>0.56</td>\n",
       "      <td>0.29</td>\n",
       "      <td>0.17</td>\n",
       "      <td>-0.11</td>\n",
       "      <td>-0.12</td>\n",
       "      <td>0.36</td>\n",
       "      <td>-0.41</td>\n",
       "      <td>0.96</td>\n",
       "      <td>-0.89</td>\n",
       "      <td>0.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.61</td>\n",
       "      <td>0.67</td>\n",
       "      <td>1.19</td>\n",
       "      <td>0.56</td>\n",
       "      <td>0.83</td>\n",
       "      <td>0.57</td>\n",
       "      <td>0.50</td>\n",
       "      <td>0.66</td>\n",
       "      <td>0.36</td>\n",
       "      <td>-0.41</td>\n",
       "      <td>0.96</td>\n",
       "      <td>1.12</td>\n",
       "      <td>0.89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>4.29</td>\n",
       "      <td>2.94</td>\n",
       "      <td>1.19</td>\n",
       "      <td>0.56</td>\n",
       "      <td>2.42</td>\n",
       "      <td>2.97</td>\n",
       "      <td>2.64</td>\n",
       "      <td>1.96</td>\n",
       "      <td>1.96</td>\n",
       "      <td>2.44</td>\n",
       "      <td>0.96</td>\n",
       "      <td>1.12</td>\n",
       "      <td>0.89</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            0        1        2        3        4        5        6        7        8        9        10       11       12\n",
       "count  1946.00  1946.00  1946.00  1946.00  1946.00  1946.00  1946.00  1946.00  1946.00  1946.00  1946.00  1946.00  1946.00\n",
       "mean      0.00    -0.00     0.00     0.00    -0.00     0.00    -0.00     0.00    -0.00    -0.00     0.00    -0.00     0.00\n",
       "std       1.00     1.00     1.00     1.00     1.00     1.00     1.00     1.00     1.00     1.00     1.00     1.00     1.00\n",
       "min      -4.55    -2.30    -0.84    -1.78    -2.27    -5.60    -3.88    -5.38    -3.08    -0.41    -1.04    -0.89    -1.12\n",
       "25%      -0.70    -0.55    -0.84     0.56    -0.52    -0.83    -0.89    -0.56    -0.91    -0.41    -1.04    -0.89    -1.12\n",
       "50%       0.05     0.04    -0.84     0.56     0.29     0.17    -0.11    -0.12     0.36    -0.41     0.96    -0.89     0.89\n",
       "75%       0.61     0.67     1.19     0.56     0.83     0.57     0.50     0.66     0.36    -0.41     0.96     1.12     0.89\n",
       "max       4.29     2.94     1.19     0.56     2.42     2.97     2.64     1.96     1.96     2.44     0.96     1.12     0.89"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Preparing set of x variables for the model\n",
    "x_var_knn = [\n",
    "'log_AVG_PREP_VID_TIME',\n",
    "'log_TOTAL_MEALS_ORDERED',\n",
    "'has_TOTAL_PHOTOS_VIEWED',\n",
    "'has_WEEKLY_PLAN',\n",
    "'log_UNIQUE_MEALS_PURCH',\n",
    "'log_CONTACTS_W_CUSTOMER_SERVICE',\n",
    "'log_LARGEST_ORDER_SIZE',\n",
    "'log_AVG_CLICKS_PER_VISIT',\n",
    "'log_MEDIAN_MEAL_RATING',\n",
    "'has_CANCELLATIONS_AFTER_NOON',\n",
    "'has_MASTER_CLASSES_ATTENDED',\n",
    "'personal',\n",
    "'professional',\n",
    "]\n",
    "\n",
    "# preparing explanatory variable data\n",
    "data_df_knn = data_df[x_var_knn]\n",
    "\n",
    "# preparing response variables\n",
    "log_data_df_target = data_df.loc[ : , 'log_REVENUE']\n",
    "\n",
    "# standardize knn_data\n",
    "# INSTANTIATING a StandardScaler() object\n",
    "scaler = StandardScaler()\n",
    "\n",
    "\n",
    "# FITTING the scaler with the data\n",
    "scaler.fit(data_df_knn)\n",
    "\n",
    "\n",
    "# TRANSFORMING our data after fit\n",
    "X_scaled = scaler.transform(data_df_knn)\n",
    "\n",
    "\n",
    "# converting scaled data into a DataFrame\n",
    "X_scaled_df = pd.DataFrame(X_scaled)\n",
    "\n",
    "\n",
    "# checking the results\n",
    "X_scaled_df.describe().round(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "upset-checklist",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# this is the exact code we were using before\n",
    "X_train_STAND, X_test_STAND, y_train_STAND, y_test_STAND = train_test_split(\n",
    "            X_scaled_df,\n",
    "            log_data_df_target,\n",
    "            test_size = 0.25,\n",
    "            random_state = 219)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "respected-surgeon",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The optimal number of neighbors is 10\n"
     ]
    }
   ],
   "source": [
    "# creating lists for training set accuracy and test set accuracy\n",
    "training_accuracy = []\n",
    "test_accuracy = []\n",
    "\n",
    "\n",
    "# building a visualization of 1 to 50 neighbors\n",
    "neighbors_settings = range(1, 21)\n",
    "\n",
    "\n",
    "for n_neighbors in neighbors_settings:\n",
    "    # Building the model\n",
    "    clf = KNeighborsRegressor(n_neighbors = n_neighbors)\n",
    "    clf.fit(X_train_STAND, y_train_STAND)\n",
    "    \n",
    "    # Recording the training set accuracy\n",
    "    training_accuracy.append(clf.score(X_train_STAND, y_train_STAND))\n",
    "    \n",
    "    # Recording the generalization accuracy\n",
    "    test_accuracy.append(clf.score(X_test_STAND, y_test_STAND))\n",
    "\n",
    "\n",
    "# plotting the visualization\n",
    "fig, ax = plt.subplots(figsize=(12,8))\n",
    "plt.plot(neighbors_settings, training_accuracy, label = \"training accuracy\")\n",
    "plt.plot(neighbors_settings, test_accuracy,     label = \"test accuracy\")\n",
    "plt.ylabel(\"Accuracy\")\n",
    "plt.xlabel(\"n_neighbors\")\n",
    "plt.legend()\n",
    "plt.show()\n",
    "\n",
    "\n",
    "# finding the optimal number of neighbors\n",
    "opt_neighbors = test_accuracy.index(max(test_accuracy)) + 1\n",
    "print(f\"\"\"The optimal number of neighbors is {opt_neighbors}\"\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "ruled-desperate",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "KNN Training Score: 0.7597\n",
      "KNN Testing Score : 0.7415\n",
      "KNN Train-Test Gap: 0.0182\n"
     ]
    }
   ],
   "source": [
    "# INSTANTIATING a model with the optimal number of neighbors\n",
    "knn_stand = KNeighborsRegressor(algorithm = 'auto',\n",
    "                                n_neighbors = 16)\n",
    "\n",
    "\n",
    "# FITTING the model based on the training data\n",
    "knn_stand_fit = knn_stand.fit(X_train_STAND, y_train_STAND)\n",
    "\n",
    "\n",
    "\n",
    "# PREDITCING on new data\n",
    "knn_stand_pred = knn_stand_fit.predict(X_test_STAND)\n",
    "\n",
    "\n",
    "\n",
    "# SCORING the results\n",
    "print('KNN Training Score:', knn_stand.score(X_train_STAND, y_train_STAND).round(4))\n",
    "print('KNN Testing Score :',  knn_stand.score(X_test_STAND, y_test_STAND).round(4))\n",
    "\n",
    "\n",
    "# saving scoring data for future use\n",
    "knn_stand_score_train = knn_stand.score(X_train_STAND, y_train_STAND).round(4)\n",
    "knn_stand_score_test  = knn_stand.score(X_test_STAND, y_test_STAND).round(4)\n",
    "\n",
    "\n",
    "# displaying and saving the gap between training and testing\n",
    "print('KNN Train-Test Gap:', abs(knn_stand_score_train - knn_stand_score_test).round(4))\n",
    "knn_stand_test_gap = abs(knn_stand_score_train - knn_stand_score_test).round(4)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "starting-greensboro",
   "metadata": {},
   "source": [
    "# RESULTS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "moderate-tuner",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Results:\n",
      "\n",
      "Model Type  Training  Testing  Train-Test Gap  Model Size\n",
      "       OLS    0.7636   0.7584          0.0052          15\n",
      "       ARD    0.7571   0.7525          0.0046          15\n",
      "     Lasso    0.6891   0.6950          0.0052          21\n",
      "       KNN    0.7597   0.7415          0.0182          14 \n",
      "\n",
      "------------------------------------------------------------------------------\n",
      "------------------------------------------------------------------------------\n",
      "\n",
      "Preferred Model: 'OLS'\n",
      "\n",
      "Model Type  Training  Testing  Train-Test Gap  Model Size\n",
      "       OLS    0.7636   0.7584          0.0052          15 \n",
      "\n",
      "                      Variables  Coefficients\n",
      "                      intercept          1.51\n",
      "            TOTAL_PHOTOS_VIEWED          0.00\n",
      "          log_AVG_PREP_VID_TIME          0.56\n",
      "        log_TOTAL_MEALS_ORDERED          0.26\n",
      "                has_WEEKLY_PLAN         -0.01\n",
      "             UNIQUE_MEALS_PURCH          0.05\n",
      "      PRODUCT_CATEGORIES_VIEWED          0.00\n",
      "             LARGEST_ORDER_SIZE         -0.02\n",
      "             MEDIAN_MEAL_RATING          0.06\n",
      "         log_UNIQUE_MEALS_PURCH         -0.59\n",
      "log_CONTACTS_W_CUSTOMER_SERVICE          0.10\n",
      "   has_CANCELLATIONS_AFTER_NOON         -0.01\n",
      "    has_MASTER_CLASSES_ATTENDED          0.04\n",
      "         TASTES_AND_PREFERENCES          0.01\n",
      "             CROSS_SELL_SUCCESS         -0.02 \n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Comparing Results\n",
    "model_performance = {\n",
    "    \n",
    "    'Model Type'    : ['OLS', 'ARD', 'Lasso', 'KNN'],\n",
    "           \n",
    "    'Training' : [lr_train_score,\n",
    "                  ard_train_score,  lasso_train_score,knn_stand_score_train],\n",
    "           \n",
    "    'Testing'  : [lr_test_score, \n",
    "                 ard_test_score, lasso_test_score,knn_stand_score_test],\n",
    "                    \n",
    "    'Train-Test Gap' : [lr_test_gap, \n",
    "                        ard_test_gap, lasso_test_gap,knn_stand_test_gap],\n",
    "                    \n",
    "    'Model Size' : [len(lr_model_lst), len(ard_model_lst), len(lasso_model_lst), (len(x_var_knn)+1) ]}\n",
    "\n",
    "\n",
    "# Cleaning up into a data frame\n",
    "model_performance = pd.DataFrame(model_performance)\n",
    "\n",
    "\n",
    "# creating a dictionary for candidate model performance\n",
    "candidate_model_performance = {\n",
    "    \n",
    "    'Model Type'    : ['OLS'],\n",
    "           \n",
    "    'Training' : [lr_train_score],\n",
    "           \n",
    "    'Testing'  : [lr_test_score],\n",
    "                    \n",
    "    'Train-Test Gap' : [lr_test_gap],\n",
    "                    \n",
    "    'Model Size' : [len(lr_model_lst)]}\n",
    "        \n",
    "# converting candidate_model_performance into a DataFrame\n",
    "candidate_model_performance = pd.DataFrame(candidate_model_performance)\n",
    "\n",
    "# create a dataframe to display model coefficient\n",
    "candidate_model = pd.DataFrame(lr_model_lst)\n",
    "candidate_model.columns = ['Variables', 'Coefficients']\n",
    "print(f\"\"\"\n",
    "Results:\n",
    "\n",
    "{model_performance.to_string(index=False)} \n",
    "\n",
    "------------------------------------------------------------------------------\n",
    "------------------------------------------------------------------------------\n",
    "\n",
    "Preferred Model: 'OLS'\n",
    "\n",
    "{candidate_model_performance.to_string(index=False)} \n",
    "\n",
    "{candidate_model.to_string(index=False)} \n",
    "\"\"\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
